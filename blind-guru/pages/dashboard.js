import Footer from "@components/Footer";
import Head from "next/head";
import * as React from "react";
import { useTheme } from "@mui/material/styles";
import { useMemo} from 'react'
import Box from "@mui/material/Box";
import Card from "@mui/material/Card";
import CardContent from "@mui/material/CardContent";
import CardMedia from "@mui/material/CardMedia";
import IconButton from "@mui/material/IconButton";
import Typography from "@mui/material/Typography";
import SkipPreviousIcon from "@mui/icons-material/SkipPrevious";
import PlayArrowIcon from "@mui/icons-material/PlayArrow";
import PauseIcon from '@mui/icons-material/Pause';
import SkipNextIcon from "@mui/icons-material/SkipNext";
import Router from "next/router";
import ProtectedRoute from "components/ProtectedRoute";
import {TwitterTweetEmbed} from 'react-twitter-embed'
import Image from 'next/image'
import Logo from '../public/logo.svg'
import SpeechRecognition, { useSpeechRecognition } from 'react-speech-recognition';
import axios from "axios";
import Speech from "speak-tts";


const TweetEmbedder = React.memo(() => { return <TwitterTweetEmbed tweetId={"933354946111705097"} />}, () => true);
const SpeechRecognizer = () => {
  const commands = [
    {
        command: 'start',
        callback: () => {alert("hello")},
        isFuzzyMatch: true,
      fuzzyMatchingThreshold: 0.2,
    }
]
const {transcript,
  listening,
  resetTranscript,
  browserSupportsSpeechRecognition} = useSpeechRecognition( { commands }) 


  React.useEffect(() => {
    SpeechRecognition.startListening({ continuous: true, interimResults: true });
  
  }, []);
return (
  <div>
    {transcript}
  </div>
)

}

function dashboard() {
  const [arr, setarr] = React.useState([]);
  const [counter, setcounter] = React.useState(2);
  const [play, setplay] = React.useState(false);
  const[speech,setspeech]=React.useState(null)
 
  console.log("speech")
  React.useEffect(()=>{
  setspeech(new Speech());
  console.log(speech)
  },[])
  


  React.useEffect(() => {
   
    axios.get("api/gettweets").then((res) => {
     
      console.log(res.data.data)
      setarr(res.data.data);
    });
  }, []);

  const theme = useTheme();
  function Logout() {
    Router.push("/api/auth/twitter/logout");
  }
  const previous = () => {
   // will throw an exception if not browser supported
  if(counter==-1){
    return
  }

    speech
      .speak({
        text: arr[counter].text,
      })
      .then(() => {
        console.log("Success !");
      })
      .catch((e) => {
        console.error("An error occurred :", e);
      });
      setcounter(counter-1)
  };
  const next = () => {
     // will throw an exception if not browser supported
    

    speech
      .speak({
        text: arr[counter].text,
      })
      .then(() => {
        console.log("Success !");
      })
      .catch((e) => {
        console.error("An error occurred :", e);
      });
      setcounter(counter+1)
  };
  const pause = (event) => {
    event.preventDefault()
   
    if(!speech.paused()){
    speech.pause();
    setplay(true)
  
  }
    else{
      speech.resume()
      setplay(false)
    }
  };
  
  return (
    <ProtectedRoute>
      <div className="container">
        <Head>
          <title>Blind Guru | Dashboard</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <div className="landing">
            <Image alt="Logo" src={Logo} />

            <div className="heading1">Dashboard</div>
            <TweetEmbedder />

            <Card
              sx={{
                display: "flex",
                marginTop: "15px",
                background: "#0B8B8B",
                borderRadius: "20px",
                width: "300px",
                height: "90px",
                alignContent: "center",
                justifyContent: "center",
              }}
            >
              <Box
                sx={{
                  display: "flex",
                  justifyContent: "center",
                  alignItems: "center",
                }}
              >
                <IconButton
                  aria-label="previous"
                  sx={{ height: 60, width: 60, color: "#fff" }}
                  onClick={previous}
                >
                  {theme.direction === "rtl" ? (
                    <SkipNextIcon />
                  ) : (
                    <SkipPreviousIcon
                      sx={{ height: 45, width: 45, color: "#fff" }}
                    />
                  )}
                </IconButton>
               {play&&<IconButton aria-label="play/pause" onClick={pause}>
                  <PlayArrowIcon
                    sx={{ height: 60, width: 60, color: "#fff" }}
                  />
                </IconButton>}
                {!play&&<IconButton aria-label="play/pause" onClick={pause}>
                  <PauseIcon
                    sx={{ height: 60, width: 60, color: "#fff" }}
                  />
                </IconButton>}
                
                <IconButton
                  aria-label="next"
                  sx={{ height: 45, width: 45, color: "#fff" }}
                  onClick={next}
                >
                  {theme.direction === "rtl" ? (
                    <SkipPreviousIcon />
                  ) : (
                    <SkipNextIcon
                      sx={{ height: 45, width: 45, color: "#fff" }}
                    />
                  )}
                </IconButton>
              </Box>
            </Card>
            <button className="logout-btn" onClick={Logout}>
              Logout
            </button>
          <SpeechRecognizer />
          </div>
        </main>

        <Footer />
      </div>
    </ProtectedRoute>
  );
}
export default dashboard;
